name: release
env:
  ARGO_NAMESPACE: argo
  ARGO_VERSION: v3.4.1
on:
  push:
    branches:
      - main

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v3.4.0
        with:
          skip_after_successful_duplicate: "true"
  publish:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: self-hosted
    steps:
      - name: Setup Runner for Argo
        run: |
          cd $HOME
          echo "Install argo"
          # Download the binary
          curl -sLO https://github.com/argoproj/argo-workflows/releases/download/${ARGO_VERSION}/argo-linux-amd64.gz
          # Unzip
          gunzip argo-linux-amd64.gz
          # Make binary executable
          chmod +x argo-linux-amd64
          # Move binary to path
          sudo mv ./argo-linux-amd64 /usr/local/bin/argo
          # Test installation
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - run: echo ${GITHUB_REPOSITORY}
      - run: echo ${GITHUB_REPOSITORY_NAME_PART}
      - run: echo ${GITHUB_SERVER_URL}
      - name: publish
        run: |
          echo "commit sha ${GITHUB_SHA}"
          argo version --short
          argo submit .argo/publish.yaml \
            --generate-name="${GITHUB_REPOSITORY_NAME_PART}-publish-${GITHUB_SHA_SHORT}-" \
            -p appName="${GITHUB_REPOSITORY_NAME_PART}" \
            -p branch="${GITHUB_REF_NAME}" \
            -p containerRegistryURL="ghcr.io/${GITHUB_REPOSITORY_OWNER_PART_SLUG}/${GITHUB_REPOSITORY_NAME_PART}:${GITHUB_SHA_SHORT}" \
            -p gitUrlNoProtocol="git@github.com:${GITHUB_REPOSITORY_OWNER_PART_SLUG}" \
            -p shortSha="${GITHUB_SHA_SHORT}" \
            --wait --log
